<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.2//EN"
        "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <property name="fileExtensions" value="java, properties, xml"/>


    <module name="TreeWalker">
        <property name="cacheFile" value="${checkstyle.cache.file}"/>

        <module name="OuterTypeFilename"/>
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL"/>
            <property name="format" value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)"/>
            <property name="message" value="Consider using special escape sequence instead of octal value or Unicode escaped value."/>
        </module>
        <!--<module name="AvoidEscapedUnicodeCharacters">-->
        <!--<property name="allowEscapesForControlCharacters" value="true"/>-->
        <!--<property name="allowByTailComment" value="true"/>-->
        <!--<property name="allowNonPrintableEscapes" value="true"/>-->
        <!--</module>-->
        <module name="LineLength">
            <property name="max" value="200"/>
            <property name="ignorePattern" value="^package.*|^import.*|a href|href|http://|https://|ftp://"/>
        </module>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="NeedBraces"/>
        <module name="LeftCurly"/>
        <!--<module name="RightCurly">-->
        <!--<property name="id" value="RightCurlySame"/>-->
        <!--<property name="tokens" value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO"/>-->
        <!--</module>-->
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone"/>
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT"/>
        </module>

        <!--<module name="WhitespaceAround">-->
        <!--<property name="allowEmptyConstructors" value="true"/>-->
        <!--<property name="allowEmptyMethods" value="true"/>-->
        <!--<property name="allowEmptyTypes" value="true"/>-->
        <!--<property name="allowEmptyLoops" value="true"/>-->
        <!--<message key="ws.notFollowed"-->
        <!--value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>-->
        <!--<message key="ws.notPreceded"-->
        <!--value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>-->
        <!--</module>-->

        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="FallThrough"/>
        <!--<module name="ModifierOrder"/>-->
        <!--<module name="RedundantModifier"/>-->
        <!--<module name="EmptyLineSeparator">-->
        <!--<property name="allowNoEmptyLineBetweenFields" value="true"/>-->
        <!--</module>-->
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot"/>
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma"/>
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
            <property name="id" value="SeparatorWrapEllipsis"/>
            <property name="tokens" value="ELLIPSIS"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapArrayDeclarator"/>
            <property name="tokens" value="ARRAY_DECLARATOR"/>
            <property name="option" value="EOL"/>
        </module>
        <!--<module name="SeparatorWrap">-->
        <!--<property name="id" value="SeparatorWrapMethodRef"/>-->
        <!--<property name="tokens" value="METHOD_REF"/>-->
        <!--<property name="option" value="nl"/>-->
        <!--</module>-->
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
        </module>
        <module name="TypeName"/>
        <!--<module name="MemberName">-->
        <!--<property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$"/>-->
        <!--</module>-->
        <!--<module name="ParameterName">-->
        <!--<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>-->
        <!--</module>-->
        <!--<module name="CatchParameterName">-->
        <!--<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>-->
        <!--</module>-->
        <!--<module name="LocalVariableName">-->
        <!--<property name="tokens" value="VARIABLE_DEF"/>-->
        <!--<property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$"/>-->
        <!--</module>-->
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
        </module>
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace"/>
        <!--<module name="Indentation">-->
        <!--<property name="basicOffset" value="4"/>-->
        <!--<property name="braceAdjustment" value="0"/>-->
        <!--<property name="caseIndent" value="4"/>-->
        <!--<property name="throwsIndent" value="4"/>-->
        <!--<property name="lineWrappingIndentation" value="4"/>-->
        <!--<property name="arrayInitIndent" value="4"/>-->
        <!--</module>-->
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false"/>
            <property name="allowedAbbreviationLength" value="6"/>
        </module>
        <!--<module name="OverloadMethodsDeclarationOrder"/>-->
        <!--<module name="VariableDeclarationUsageDistance"/>-->
        <!--<module name="MethodParamPad"/>-->
        <module name="ParenPad"/>
        <!--<module name="OperatorWrap">-->
        <!--<property name="option" value="NL"/>-->
        <!--<property name="tokens" value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR"/>-->
        <!--</module>-->
        <!--<module name="AnnotationLocation">-->
        <!--<property name="id" value="AnnotationLocationMostCases"/>-->
        <!--<property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>-->
        <!--</module>-->
        <!--<module name="AnnotationLocation">-->
        <!--<property name="id" value="AnnotationLocationVariables"/>-->
        <!--<property name="tokens" value="VARIABLE_DEF"/>-->
        <!--<property name="allowSamelineMultipleAnnotations" value="true"/>-->
        <!--</module>-->
        <!--<module name="NonEmptyAtclauseDescription"/>-->
        <!--<module name="JavadocTagContinuationIndentation"/>-->
        <!--<module name="SummaryJavadoc">-->
        <!--<property name="forbiddenSummaryFragments" value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )"/>-->
        <!--</module>-->
        <!--<module name="JavadocParagraph"/>-->
        <!--<module name="AtclauseOrder">-->
        <!--<property name="tagOrder" value="@param, @return, @throws, @deprecated"/>-->
        <!--<property name="target" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF"/>-->
        <!--</module>-->
        <!--<module name="JavadocMethod">-->
        <!--<property name="scope" value="public"/>-->
        <!--<property name="allowMissingParamTags" value="true"/>-->
        <!--<property name="allowMissingThrowsTags" value="true"/>-->
        <!--<property name="allowMissingReturnTag" value="true"/>-->
        <!--<property name="minLineCount" value="2"/>-->
        <!--<property name="allowedAnnotations" value="Override, Test"/>-->
        <!--<property name="allowThrowsTagsForSubclasses" value="true"/>-->
        <!--</module>-->
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
        </module>
        <!--<module name="SingleLineJavadoc">-->
        <!--<property name="ignoreInlineTags" value="false"/>-->
        <!--</module>-->
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected"/>
        </module>
        <!--<module name="CommentsIndentation"/>-->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="AvoidStaticImport"/>
        <!--import违法的包，sun.*-->
        <module name="IllegalImport"/>
        <!--defaults to sun.* packages-->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="true"/>
        </module>
        <!--import分组和顺序-->
        <module name="CustomImportOrder">
            <property name="customImportOrderRules"
                      value="STATIC###STANDARD_JAVA_PACKAGE###SPECIAL_IMPORTS###THIRD_PARTY_PACKAGE"/>
            <property name="specialImportsRegExp" value="^org\."/>
            <property name="thirdPartyPackageRegExp" value="^com\."/>
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="separateLineBetweenGroups" value="true"/>
        </module>

        <module name="MethodLength">
            <property name="max" value="200"/>
        </module>
        <!--可执行代码片段长度-->
        <module name="ExecutableStatementCount">
            <property name="max" value="90"/>
        </module>
        <!--java文件长度-->
        <module name="ExecutableStatementCount">
            <property name="max" value="1000"/>
        </module>

        <!--<module name="CovariantEquals"/>-->
        <!--<module name="EmptyStatement"/>-->
        <!--equals左边为null检查-->
        <!--<module name="EqualsAvoidNull"/>-->
        <!--<module name="EqualsHashCode"/>-->
        <!--switch语句是否有default-->
        <module name="MissingSwitchDefault"/>
        <module name="DefaultComesLast"/>
        <!--<module name="RedundantThrows"/>-->
        <!--<module name="SimplifyBooleanExpression"/>-->
        <!--<module name="SimplifyBooleanReturn"/>-->

        <!--检查代码中是否有在变量声明、返回值、参数中都没有作为类型使用过的特定类-->
        <module name="IllegalType"/>
        <!--检查是否有不需要的圆括号-->
        <module name="UnnecessaryParentheses"/>
        <module name="ArrayTypeStyle"/>
        <module name="UpperEll"/>
        <module name="UncommentedMain"/>
    </module>
</module>
